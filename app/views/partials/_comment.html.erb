<% unless @comments.empty? %>
	<% for comment in @comments[object] %>
		<%= render :partial => "partials/display_comment.html.erb", :locals => { :comment => comment } %>		
	
		<%# may want this for ajaxing stuff later <%= link_to "Reply", :action => :comment, :params => { :post => { :id => @post.id }, :comment => {:parent => comment.id }}%>
		<div class="reply<%= comment.id %>"><a href="javascript:return 0;">Reply to <%= comment.user.username%>'s comment</a></div>
		
		<%
		# generates jquery callback functions for show/hide functionality
		# note: doesn't scale great, ajax here would be good
		 @js += "$('.reply#{comment.id} a').click(function() {
			$('.reply#{comment.id}').addClass('hidden');
			$('#reply#{comment.id}').removeClass('hidden');
		});

		$('.hide#{comment.id}').click(function() {
			$('.reply#{comment.id}').removeClass('hidden');
			$('#reply#{comment.id}').addClass('hidden');
		});" %>

		<div id="reply<%= comment.id %>" class="hidden">
		<div class='box'><a href="javascript:return 0;" class="hide<%= comment.id %>">Hide</a></div>

		<% # generates a form to reply to the given comment, see note about scaling above %>
		<table>
			<% form_for :comment, :url => { :controller => :posts, :action => :comment, :params => { :post => { :id => @post.id }, :parent => comment.id }} do |f| %>		
			<tr>
				<td>
					Comment<br />
					<span class="commentbox"><%= f.text_area :text %></span>
				</td>
			</tr>
			<tr><td><%= f.submit "Submit" %><br /></td></tr>
		<% end %>
		</table>
		</div>
		


		<%# recursive call to self passing in own id as the root node for the comment object, div indents 20 px %>
		<div class="indent"><%= render(:partial => "partials/comment.html.erb", :object => comment.id )%></div>

	<% end %>
<% end %>

